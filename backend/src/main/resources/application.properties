spring.application.name=gestorfinanceiro

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/gestorfinanceiro_db
spring.datasource.username=postgres
spring.datasource.password=admin

# Usar "update" para evitar perda de dados. Se precisar recriar a tabela, use "create"
spring.jpa.hibernate.ddl-auto=update

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Mostrar queries SQL no console para debug
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Configurações do HikariCP (Pool de Conexões) para melhor desempenho
# Número máximo de conexões simultâneas
spring.datasource.hikari.maximum-pool-size=10
# Mínimo de conexões ociosas
spring.datasource.hikari.minimum-idle=2
# Tempo de timeout de conexões inativas (30s)
spring.datasource.hikari.idle-timeout=30000
# Timeout de novas conexões (20s)
spring.datasource.hikari.connection-timeout=20000

# Configuração do Logging (para facilitar a depuração)
logging.level.org.springframework=INFO
logging.level.br.com.gestorfinanceiro=INFO
# Mostra as queries SQL
logging.level.org.hibernate.SQL=INFO
# Mostra os parâmetros das queries
logging.level.org.hibernate.type.descriptor.sql=TRACE

# JWT
jwt.secret=dfac4305543e9cedcb85ee1cdd3c1c342e5bebca8a552391b4a56eb803bc8bfca102da4e5319d9bbe893975e3a2b988e7ac3be650dcf3efde2c53dd5604e953a
# Define por quanto tempo o token será válido antes de precisar ser renovado (1d em milissegundos)
jwt.expiration=86400000